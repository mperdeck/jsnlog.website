@using WebSite.App_Code
@using ViewExtensions

@{
    ViewBag.Title = "Log Message Format";
    ViewBag.H1 = "JSON Log Message Format";
    ViewBag.Key = "getstarted-logmessageformat";
    Layout = "~/Views/Shared/_DocumentationLayout.cshtml";
    ViewBag.Description = "Format of JSON objects containing log messages";
}

<p>
    The .Net and NodeJS editions of JSNLog include a server side end point that receives log messages.
    If you do not use these editions however, you'll have to create your own end point. To make that easier, this
    page describes:
</p>
<ul>
    <li><a href="#url">The URL where jsnlog.js sends log messages to</a>;</li>
    <li><a href="#formatlogmessages">The format of the log messages</a>.</li>
</ul>

<a id="url"></a>
<h2>The URL where jsnlog.js sends log messages to</h2>

<p>
    The built in AJAX appender by default sends all log messages to this url:
</p>
<pre>@SiteConstants.DefaultDefaultAjaxUrl</pre>

<p>
    You can change this using the
    <span class="term">defaultAjaxUrl</span>
    field in the
    JL
    @Html.ViewLink("jsnlogjs-jl-setOptions")<text>.</text>
</p>

<a id="formatlogmessages"></a>
<h2>Format of the log messages</h2>
<p>
    The AJAX appender sends log requests with:
</p>
<ul>
    <li>
        A JSON string containing most of the log data;
    </li>
    <li>
        A <a href="#requestheader">request header @SiteConstants.HttpHeaderRequestIdName containing the request id</a>.
    </li>
</ul>

<h3>JSON string</h3>
<p>
    The JSON string has this format:
</p>

@Html.Partial("_LogMessageFormat")

<a id="requestheader"></a>
<h3>@SiteConstants.HttpHeaderRequestIdName request header with request id</h3>

<p>
    The request id is used to identify all log requests that were generated by the same user.
    To use this facility, set the request id in your JavaScript after the page has loaded to some unique string, using
    the JL
    @Html.ViewLink("jsnlogjs-jl-setOptions")<text>.</text>
</p>
<p>
    The jsnlog.js library then includes that request id in all log requests.
</p>
<p>
    If you don't set the request id, jsnlog.js uses the empty string.
</p>
<p>
    The request id is sent in a custom HTTP request header, @SiteConstants.HttpHeaderRequestIdName. This way,
    server side code can easily determine whether a request is a log request from jsnlog.js, or some other request (such as a simple page request).
</p>


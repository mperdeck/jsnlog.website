@using ViewExtensions
@using JSNLog.Infrastructure

@{
    ViewBag.Title = "__jsnlog_configure function";
    ViewBag.Key = "jsnlogjs-configurefunction";
    ViewBag.Description = "If defined, the library executes this function after it has loaded.";
}

@*
    Note that you cannot use expressions in ViewBag.Title, because it is interpreted by ViewExtensions when it tries
    to build the menu. Also, ViewExtensions caches all this, so restart the app (eg. modify web.config) to get ViewExtensions
    to pick up a new title.
*@

@section Remarks {
    <p>
        This is an infrastructure related feature.
    </p>
    <p>
        After the jsnlog.js library has loaded, it checks whether there is a global function with the name
        <span class="term">@SiteConstants.GlobalMethodCalledAfterJsnlogJsLoaded</span>.
        If there is, it executes that function.
    </p>
    <p>
        The function takes one argument: the JL object itself. Here is how jsnlog.js calls the function, after having made sure
        that it actually exists:
    </p>
    <pre>if (typeof __jsnlog_configure == 'function') {
    __jsnlog_configure(JL);
}</pre>
    <p>
        This method can be very useful when writing
        @Html.ViewLink("configuration-onclient", "client side configuration code", null, "sync-configcode-with-jsnlogjsload")<text>.</text>
    </p>
}


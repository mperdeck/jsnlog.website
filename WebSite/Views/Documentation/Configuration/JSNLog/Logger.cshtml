@using ViewExtensions
@using JSNLog

@{
    ViewBag.Title = "<logger> Element";
    ViewBag.Key = "webconfig-logger";
    ViewBag.Description = "Configures a logger.";
    Layout = "~/Views/Shared/_ElementLayout.cshtml";
    ViewBag.VersionNameRegex = "NetJs";
}

@section Definition {
<pre>&lt;configuration&gt; 
    &lt;jsnlog&gt;
        &lt;logger 
            name="string" 
            level="number|@JSNLog.Infrastructure.LevelUtils.NamedLevels()"
            userAgentRegex="regular expression"
            ipRegex="regular expression"
            disallow="regular expression" 
            appenders="Appender Name(s)" &gt;

            &lt;onceOnly regex="regular expression" /&gt;
        &lt;/logger&gt; 
    &lt;/jsnlog&gt;
&lt;/configuration&gt; 
</pre>
}

@section Remarks {
    <p>
    The &lt;logger&gt; element can have the following attributes: 
        </p>

    @Html.Partial("_LoggerRemarks",new ViewDataDictionary { 
            { "objectType", "Logger"}, 
            { "configSource", "web.config"}, 
            { "appenderDescriptionKey", "webconfig-ajaxappender"}  
        })
}

@section Examples {
<p>
    This sets the level of logger &quot;a.b&quot; to 3000.
</p>

<pre>&lt;logger name="a.b" level="3000" /&gt;</pre>

<p>
    This sets the level of the root logger.
</p>

<pre>&lt;logger level="3000" /&gt;</pre>

<p>
    This sets the level of logger &quot;a.b&quot; to INFO (which is the same as setting it to 3000).
</p>

<pre>&lt;logger name="a.b" level="INFO" /&gt;</pre>

<p>
    This sets the level to 4000.
    It also disables the logger for all browsers, except those whose user agent string contains <span class="term">MSIE 7|MSIE 8</span>
    (that is, it is version 7 or 8 of Internet Explorer).
</p>

<pre>&lt;logger name="a.b" userAgentRegex="MSIE 7|MSIE 8" level="4000" /&gt;</pre>

<p>
    This creates an appender &quot;appender&quot; and then tells the logger &quot;a.b&quot; to send
    all log messages to it.
</p>

<pre>&lt;ajaxAppender name="appender" /&gt;
&lt;logger name="a.b" appenders="appender" /&gt;</pre>

<p>
    This creates two appenders and then tells the logger &quot;a.b&quot; to send
    all log messages to them.
</p>

<pre>&lt;ajaxAppender name="appender1" /&gt;
&lt;ajaxAppender name="appender2" /&gt;
&lt;logger name="a.b" appenders="appender1;appender2" /&gt;</pre>

<p>
Suppress duplicate messages that match the regular expression
    &quot;Parameter x too high - x =&quot;.
</p>

<pre>&lt;logger name=&quot;a&quot;&gt;
    &lt;onceOnly regex=&quot;Parameter x too high - x =&quot; /&gt;
&lt;/logger&gt;</pre>

<p>
Suppress duplicate messages that match the regular expression
    &quot;Parameter x too high - x =&quot;. Also suppress duplicate messages that 
    match &quot;x = \d+ and y = \d+&quot;. 
</p>

<pre>&lt;logger name=&quot;a&quot;&gt;
    &lt;onceOnly regex=&quot;Parameter x too high - x =&quot; /&gt;
    &lt;onceOnly regex=&quot;x = \d+ and y = \d+&quot; /&gt;
&lt;/logger&gt;</pre>

<p>
    Loggers inherit
<span class="term">onceOnly</span>
    from their parents. 
    Assume you have a logger &quot;a.b&quot; whose parent &quot;a&quot; suppresses duplicates,
    but you want logger &quot;a.b&quot; to not suppress duplicates. To make that happen, give it 
    a <span class="term">onceOnly</span> collection without any regular expressions:
</p>

<pre>&lt;logger name=&quot;a.b&quot;&gt;
    &lt;onceOnly  /&gt;
&lt;/logger&gt;</pre>

}





@using ViewExtensions

<a id="es6"></a>

<h2>Loading jsnlog.js as an ES6 module</h2>

<ul>
    <li>
        <a href="https://github.com/mperdeck/jsnlog.ES6Demo" target="_blank">Demo importing and using jsnlog in an ES6 application</a>
    </li>
</ul>

<p>
    You can import jsnlog.js into your ES6 code using an 
    ES6 <a href="http://exploringjs.com/es6/ch_modules.html" target="_blank">import</a> statement:
</p>

<pre>import {JL} from 'jsnlog';</pre>

<p>
    You can then use JSNLog normally in your JavaScript code: 
</p>
<pre>JL().info("log entry from ES6 code");</pre>

<p>
    You probably
    transpile your ES6 code to ES5 with something like <a href="http://babeljs.io" target="_blank">Babel</a>.
    This will convert the ES6 <span class="term">import</span>
    to a CommonJS <span class="term">require</span>, so effectively you will be 
    <a href="#commonjs">loading jsnlog.js as a CommonJS module</a>.
</p>

<p>
    jsnlog.js is 
    <a href="https://www.npmjs.com/package/jsnlog" target="_blank">available from NPM</a>
     and has the necessary code to function as an
    <a href="http://spinejs.com/docs/commonjs" target="_blank">CommonJS module</a>.
</p>

<p>
    CommonJS is normally used on the server, because it doesn't support asynchronous loading by the client over the network.
    However, <a href="#browserify">Browserify</a> enables you to use this on the client.
</p>


